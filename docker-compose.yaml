version: "3.9"

services:
  db:
    image: postgres:15
    container_name: postgres-db
    restart: always
    ports:
      - "3003:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: .
    container_name: fastapi-backend
    ports:
      - "8003:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION_SECONDS: ${JWT_EXPIRATION_SECONDS}
    command: sh -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000"

  backup:
    build:
      context: ./backupSystem
    container_name: backup
    depends_on:
      - backend
    environment:
      USERNAME_GITHUB: ${USERNAME_GITHUB}
      EMAIL_GIT: ${EMAIL_GIT}
      TOKEN_GITHUB: ${TOKEN_GITHUB}
    volumes:
      - pgdata:/dbdata:ro                             
      - ./backupSystem/backups:/app/backups
      - ./backupSystem/logs:/app/logs
      - ./backupSystem/reports:/app/reports
    command: ["sh", "-c", "./search_backup.sh -d /dbdata -i -r && crond -f -l 8"]
    user: "0:0"

volumes:
  pgdata: